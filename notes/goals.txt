[] Top Level Goals
    [X] Collect Complete Market Data for NBA Games Given The Time Period of My Data (17-18) until Present
    [] Create a Model to Predict Game Scores based on a Large Sample of Past Data
    [] Evaluate Effectiveness of Model Based on the Market Conditions Given by Sportsbooks

[] Branch Goals
    [X] Gather Cleaned Market Data From Oddsshark and Store It Onto a Local Server
        [X] Data I Don't Have that I Must Get Programmatically
            [X] Market Data by Game for Each Given Book
            [X] Book Market Data by Time (Shows Evolving Market Conditions in Time)

    [X] Gather Player Data of Completed Games Since Initial Scrape of BBall Reference
        [X] Data I Don't Have that I Must Get Programmatically
            [X] Post-AllStar Break 2020-2021 Season and Playoff Data
            [X] I will use game.py to scrape and insert played games I need

    [X] Clean Newly Acquired Market Data so that It May Be Joined On Player by Player Data From Basketball Reference
        [X] Change game_id to game_code  (Oddsshark --> BBall Reference)
    
    [X] Join Data
        [X] Join Two Data Sources by bball reference's game_code and Scrape Any Missing Games For Both Databases

    [] Write Functions to...
        [] Transform a Model Point Estimate Into a Spreadline, a Moneyline and a Total Projection
        [] Transform a Market Projection based on A Model Point Estimate Into a Decision Matrix to Evaluate a Model's Predictive Success
        [] Compare Decision Matrix of (Projected Markets vs. Market) and (Market vs. Game Reality) to Get a Second Matrix Evaluating Model Picks to Reality Given a Market.

    [] Create Model To Predict Points

    [] Create Function To Routinely Scrape a Current Data
        * Use NBA.py, shark.py and game.py as frameworks.


    [] Create Website's Framework
        [] Top-Level Structure
            [] Model's Performance Across All Games (with a Season Filter)
                [] Model Performance (SEASON BASED SUMMATION)
                    [] Table of Summary Metrics and Aggregate Records 
                    [] MODEL PREDICTION -> WINNINGS: Line Chart of Winnings Given a Random Walk Winnings Per Day
                    [] Add a Top Level Filter for Seasons and Book
                [] Power Rankings (TEAM BASED SUMMATION)
                    [] Summary Market Metrics: Average Spread, % Games Favored, Winnings/Losses Incurred by Team Given Model
                    [] Reality Team Advanced Metrics: Four Factors and Performance
                    [] Pointer (link) to Game Log With Filter on Team Name and Season
                [] Game Log (GAME BASED SUMMATION)
                    [] For Specific Season and Specific Team
                    [] Will Show Every Game of Season With :
                        [] RESULTS: Each Team's Actual Four Factors, Pace and Score for the Game
                        [] MODEL PREDICTION: My Score Predictions
                        [] MARKET PREDICTIONS: Avg. Spread, Total and Moneyline. (default Average, conform to Book Filter)
                        [] MODEL EVALUATION: Grades Based on Average Markets (default) and Groudtruth Factors. Grades will Conform to Top Level Book Filter.  
                [] Each Game Page With Show A More Detailed Analysis of All Markets and Specific Teams (GAME SPECIFIC DETAILS) {MOST ATOMIC ELEMENT OF APPLICATION}
                    [] The Teams Four Factors, Pace and Scoring Up to This Game
                    [] The Team's Opponents Four Factors, Pace and Scoring Up to This Game
                    [] The Actual Performance of the Teams in This Game (Actual Four Factors and Pace)
                    [] The Markets for the Spread, Total and Moneyline Broken Down By Book
                    [] The Evolution of the Spread, Total and Moneyline Markets Over Time with a Filter on Sportsbook
            [] Data Analysis
                [] Summary Charts of Markets, Model and Teams Through The Analyzed Time Period
                [] Detailed Textual Analysis To Accompany The Charts
                [] What Have I Learned, Where Did My Model Perform The Best, How Does Decision Time Affect Winning Performance, How Could I Improve the Model 
            [] Future Functions
                [] Adding Player Projections
                    [] Increased Specificity
                    [] Can Adjust to Injuries
                [] Scraping Integration
                    [] Gather Data of Current Games to Contiunally Feed the Model and Get Projection for Future Games
